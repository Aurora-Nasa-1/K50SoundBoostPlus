import{I as e,a as t,M as n}from"./main-CQLp2XMv.js";import{C as a}from"./core-CSZe8cb_.js";const s={config:null,moduleInfo:{},version:"10.0.0",otherConfig:{showThemeToggle:!1},async preloadData(){try{const e=sessionStorage.getItem("moduleInfo");if(e)return JSON.parse(e);const t=await a.execCommand(`cat "${a.MODULE_PATH}module.prop"`);if(t){const e=t.split("\n"),n={};return e.forEach(e=>{const t=e.split("=");if(t.length>=2){const e=t[0].trim(),a=t.slice(1).join("=").trim();n[e]=a}}),sessionStorage.setItem("moduleInfo",JSON.stringify(n)),n}return{}}catch(e){return{}}},async init(e){this.ui=e;try{return this.registerActions(),this.moduleInfo=await this.preloadData(),this.boundLanguageHandler=this.onLanguageChanged.bind(this),document.addEventListener("languageChanged",this.boundLanguageHandler),!0}catch(t){return!1}},onLanguageChanged(e){const t=document.querySelector(".about-container");t&&(t.outerHTML=this.render().trim(),this.afterRender())},onDeactivate(){this.boundLanguageHandler&&(document.removeEventListener("languageChanged",this.boundLanguageHandler),this.boundLanguageHandler=null),this.ui.clearPageActions()},registerActions(){this.ui.registerPageActions("about",[{id:"refresh-about",icon:"refresh",title:e.translate("REFRESH","刷新"),onClick:"refreshModuleInfo"},{id:"color-picker",icon:"palette",title:e.translate("COLOR_PICKER","颜色选择器"),onClick:"showColorPicker"}]),this.config.showThemeToggle&&this.ui.registerPageActions("about",[{id:"toggle-css",icon:"palette",title:e.translate("TOGGLE_CSS","切换样式"),onClick:"toggleCSS"}])},render(){return`\n        <div class="about-container">\n            <div class="about-header">\n                <div class="app-logo">\n                    <span class="material-symbols-rounded">dashboard_customize</span>\n                </div>\n                <div class="about-header-content">\n                    <h2>K50SoundBoostPlus WebUI</h2>\n                    <div class="version-badge">\n                        ${e.translate("VERSION","版本")} ${this.version}\n                    </div>\n                    <p class="about-description">${e.translate("ABOUT_DESCRIPTION","K50SoundBoostPlus模块管理界面")}</p>\n                </div>\n            </div>\n            \n            <div class="about-card">\n                <div class="about-section">\n                    <h3 class="section-title">\n                        <span class="material-symbols-rounded">info</span>\n                        ${e.translate("MODULE_INFO","模块信息")}\n                    </h3>\n                    <div class="info-list">\n                        ${this.renderModuleInfo()}\n                    </div>\n                </div>\n                \n                <div class="about-section">\n                    <h3 class="section-title">\n                        <span class="material-symbols-rounded">person</span>\n                        ${e.translate("MODULE_DEVELOPER","模块开发者")}\n                    </h3>\n                    <div class="developer-info">\n                        <div class="developer-name">\n                            ${this.moduleInfo.author||e.translate("UNKNOWN","未知")}\n                        </div>\n                        ${this.moduleInfo.github?'\n                        <a href="#" class="social-link" id="module-github-link">\n                            <span class="material-symbols-rounded">code</span>\n                            <span>GitHub</span>\n                        </a>\n                        ':""}\n                    </div>\n                </div>\n                \n                <div class="about-section">\n                    <h3 class="section-title">\n                        <span class="material-symbols-rounded">engineering</span>\n                        ${e.translate("FRAMEWORK_DEVELOPER","框架开发者")}\n                    </h3>\n                    <div class="developer-info">\n                        <div class="developer-name">\n                            AuroraNasa\n                        </div>\n                        <a href="#" class="social-link" id="github-link">\n                            <span class="material-symbols-rounded">code</span>\n                            <span>GitHub</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            \n            <div class="about-footer">\n                <p>${e.translate("COPYRIGHT_INFO",`© ${(new Date).getFullYear()} Aurora星空. All rights reserved.`)}</p>\n            </div>\n        </div>\n    `},showColorPicker(){const t=[{value:0,name:e.translate("RED","红色")},{value:37,name:e.translate("ORANGE","橙色")},{value:66,name:e.translate("YELLOW","黄色")},{value:97,name:e.translate("LIME","青柠")},{value:124,name:e.translate("GREEN","绿色")},{value:148,name:e.translate("TEAL","青色")},{value:176,name:e.translate("CYAN","蓝绿")},{value:212,name:e.translate("BLUE","蓝色")},{value:255,name:e.translate("INDIGO","靛蓝")},{value:300,name:e.translate("PURPLE","紫色")},{value:325,name:e.translate("PINK","粉色")}],s=this.getCurrentHue(),o=s,i=`\n            <div class="color-picker-content">\n                <div class="preset-colors">\n                    ${t.map(e=>`\n                        <div class="preset-color ${e.value==s?"selected":""}" \n                             data-hue="${e.value}" \n                             title="${e.name}">\n                            <div class="color-preview" style="--preview-hue: ${e.value}"></div>\n                        </div>\n                    `).join("")}\n                </div>\n                <div class="hue-control">\n                    <label>${e.translate("HUE_VALUE","色调值")}</label>\n                    <div class="hue-slider-container">\n                        <input type="range" \n                               class="hue-slider" \n                               id="hue-slider" \n                               min="0" \n                               max="360" \n                               value="${s}">\n                        <output class="hue-value" id="hue-value">${s}°</output>\n                    </div>\n                </div>\n            </div>\n        `;new n({title:e.translate("COLOR_PICKER","颜色选择器"),icon:"palette",content:i,className:"color-picker-modal",buttons:[{text:e.translate("CANCEL","取消"),type:"text",action:"cancel",onClick:()=>(this.setHueValue(o),!0)},{text:e.translate("APPLY","应用"),type:"filled",action:"apply",onClick:()=>{const t=document.getElementById("hue-slider");return t&&(this.setHueValue(t.value),a.showToast(e.translate("COLOR_CHANGED","颜色已更新"))),!0}}]}).show(),requestAnimationFrame(()=>{const e=document.getElementById("hue-slider"),t=document.getElementById("hue-value"),n=document.querySelectorAll(".preset-color"),a=document.querySelectorAll(".color-preview");n.forEach(a=>{a.addEventListener("click",()=>{const s=a.dataset.hue;n.forEach(e=>e.classList.remove("selected")),a.classList.add("selected"),e&&t&&(e.value=s,t.textContent=s+"°"),this.previewColor(s)})}),e&&t&&e.addEventListener("input",()=>{const s=e.value;t.textContent=s+"°",n.forEach(e=>{e.classList.toggle("selected",e.dataset.hue==s)}),this.previewColor(s),a.forEach(e=>{e.classList.add("updating"),setTimeout(()=>e.classList.remove("updating"),300)})})})},getCurrentHue(){const e=document.documentElement,t=getComputedStyle(e).getPropertyValue("--hue").trim();return parseInt(t)||300},previewColor(e){document.documentElement.style.setProperty("--hue",e)},setHueValue(e){document.documentElement.style.setProperty("--hue",e),localStorage.setItem("ammf_color_hue",e),document.dispatchEvent(new CustomEvent("colorChanged",{detail:{hue:e}}))},renderModuleInfo(){let t="";return[{key:"module_name",label:"MODULE_NAME",icon:"tag"},{key:"version",label:"MODULE_VERSION",icon:"new_releases"},{key:"versionCode",label:"VERSION_DATE",icon:"update"}].forEach(n=>{this.moduleInfo[n.key]&&(t+=`\n                    <div class="info-item">\n                        <div class="info-icon">\n                            <span class="material-symbols-rounded">${n.icon}</span>\n                        </div>\n                        <div class="info-content">\n                            <div class="info-label" data-i18n="${n.label}">${e.translate(n.label,n.key)}</div>\n                            <div class="info-value">${this.moduleInfo[n.key]}</div>\n                        </div>\n                    </div>\n                `)}),t||`<div class="empty-state" data-i18n="NO_INFO">${e.translate("NO_INFO","无可用信息")}</div>`},async loadModuleInfo(){try{const e=sessionStorage.getItem("moduleInfo");if(e)return void(this.moduleInfo=JSON.parse(e));const t=await a.execCommand(`cat "${a.MODULE_PATH}module.prop"`);if(t){const e=t.split("\n"),n={};e.forEach(e=>{const t=e.split("=");if(t.length>=2){const e=t[0].trim(),a=t.slice(1).join("=").trim();n[e]=a}}),this.moduleInfo=n,sessionStorage.setItem("moduleInfo",JSON.stringify(n))}else this.moduleInfo={}}catch(e){this.moduleInfo={}}},async refreshModuleInfo(){try{sessionStorage.removeItem("moduleInfo"),await this.loadModuleInfo();const t=document.querySelector(".about-container");t?(t.outerHTML=this.render().trim(),this.afterRender(),a.showToast(e.translate("MODULE_INFO_REFRESHED","模块信息已刷新"))):App.loadPage("about")}catch(t){a.showToast(e.translate("MODULE_INFO_REFRESH_ERROR","刷新模块信息失败"),"error")}},afterRender(){const t=document.getElementById("github-link");t&&t.addEventListener("click",e=>{e.preventDefault(),this.openGitHubLink()});const n=document.getElementById("module-github-link");n&&n.addEventListener("click",e=>{e.preventDefault(),this.openModuleGitHubLink()});const s=document.getElementById("refresh-about");s&&s.addEventListener("click",()=>{this.refreshModuleInfo()});const o=document.getElementById("color-picker");o&&o.addEventListener("click",()=>{this.showColorPicker()});const i=document.getElementById("toggle-css");i&&(this.updateCssButtonStatus(i),i.addEventListener("click",()=>{a.showToast(e.translate("CSS_LOADER_ERROR","CSS切换功能暂时不可用"),"warning")}))},onActivate(){this.registerActions()},onDeactivate(){this.ui?.clearPageActions?.("about")},async openGitHubLink(){try{let e="https://github.com/Aurora-Nasa-1/AMMF2";this.moduleInfo.github&&(e=this.moduleInfo.github),t.OpenUrl(e)}catch(e){a.showToast("打开GitHub链接失败","error")}},async openModuleGitHubLink(){try{if(!this.moduleInfo.github)return void a.showToast("模块未提供GitHub链接","warning");await a.execCommand(`am start -a android.intent.action.VIEW -d "${this.moduleInfo.github}"`)}catch(e){a.showToast("打开模块GitHub链接失败","error")}},updateCssButtonStatus(t){if(!t)return;const n=e.translate("TOGGLE_CSS_CUSTOM","切换到自定义样式");t.setAttribute("title",n)}};export{s as AboutPage};
