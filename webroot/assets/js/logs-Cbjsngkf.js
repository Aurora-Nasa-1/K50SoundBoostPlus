import{C as t}from"./core-CSZe8cb_.js";import{I as e}from"./main-CQLp2XMv.js";const l={config:null,logFiles:{},currentLogFile:"",logContent:"",mockLogData:["[INFO] 2024-01-15 10:30:25 - 应用程序启动成功","[DEBUG] 2024-01-15 10:30:26 - 初始化配置文件","[INFO] 2024-01-15 10:30:27 - 连接数据库成功","[WARN] 2024-01-15 10:35:12 - 内存使用率较高: 85%","[ERROR] 2024-01-15 10:40:33 - 网络连接超时","[INFO] 2024-01-15 10:40:35 - 重新连接网络成功","[DEBUG] 2024-01-15 10:45:01 - 执行定时任务","[INFO] 2024-01-15 10:50:15 - 用户登录: admin","[WARN] 2024-01-15 11:00:22 - 磁盘空间不足: 90%","[INFO] 2024-01-15 11:05:33 - 清理临时文件完成"],async preloadData(){try{return await new Promise(t=>setTimeout(t,100)),{dirExists:!0,logFiles:this.logFiles}}catch(t){return null}},async init(t){this.ui=t;try{return this.registerActions(),this.boundLanguageHandler=this.onLanguageChanged.bind(this),document.addEventListener("languageChanged",this.boundLanguageHandler),this.logFiles={"app.log":"/var/log/app.log","error.log":"/var/log/error.log","access.log":"/var/log/access.log"},Object.keys(this.logFiles).length>0?(this.currentLogFile=Object.keys(this.logFiles)[0],await this.loadLogContent()):this.logContent=e.translate("NO_LOGS_FILES","没有找到日志文件"),this.initializeAsync(),!0}catch(l){return!1}},async initializeAsync(){try{if(await new Promise(t=>setTimeout(t,50)),await this.checkLogsDirectoryExists("/var/log")){await this.scanLogFiles();const t=Object.keys(this.logFiles);t.length>0&&!this.currentLogFile&&(this.currentLogFile=t[0])}}catch(t){}},registerActions(){this.ui.registerPageActions("logs",[{id:"refresh-logs",icon:"refresh",title:e.translate("REFRESH_LOGS","刷新日志"),onClick:"loadLogContent"},{id:"export-logs",icon:"download",title:e.translate("EXPORT_LOGS","导出日志"),onClick:"exportLog"},{id:"clear-logs",icon:"delete",title:e.translate("CLEAR_LOGS","清除日志"),onClick:"clearLog"}])},async checkLogsDirectoryExists(t){try{return!0}catch(e){return!1}},async scanLogFiles(){try{this.logFiles={"app.log":"/var/log/app.log","error.log":"/var/log/error.log","access.log":"/var/log/access.log"}}catch(t){this.logFiles={}}},async loadLogContent(l=!1){try{if(!this.currentLogFile||!this.logFiles[this.currentLogFile])return void(this.logContent=e.translate("NO_LOG_SELECTED","未选择日志文件"));const t=document.getElementById("logs-display");t&&t.classList.add("loading"),await new Promise(t=>setTimeout(t,100));const o=this.mockLogData.join("\n");this.processLogContent(o,t,l)}catch(o){this.logContent=e.translate("LOGS_LOAD_ERROR","加载失败"),logsDisplay&&logsDisplay.classList.remove("loading"),l&&t.showToast(this.logContent,"error")}},processLogContent(l,o,s){this.logContent=l||e.translate("NO_LOGS","没有可用的日志"),requestAnimationFrame(()=>{o&&(o.innerHTML=this.formatLogContent(),o.classList.remove("loading"),requestAnimationFrame(()=>{o.scrollTop=o.scrollHeight})),s&&t.showToast(e.translate("LOGS_REFRESHED","日志已刷新"))})},async clearLog(){try{return this.currentLogFile&&this.logFiles[this.currentLogFile]?(this.mockLogData=[],await this.loadLogContent(),t.showToast(e.translate("LOG_CLEARED","日志已清除")),!0):void t.showToast(e.translate("NO_LOG_SELECTED","未选择日志文件"),"warning")}catch(l){return t.showToast(e.translate("LOG_CLEAR_ERROR","清除日志失败"),"error"),!1}},async exportLog(){try{if(!this.currentLogFile||!this.logFiles[this.currentLogFile])return void t.showToast(e.translate("NO_LOG_SELECTED","未选择日志文件"),"warning");const l=(new Date).toISOString().replace(/[:.]/g,"-"),o=`${this.currentLogFile}_${l}.log`,s=new Blob([this.logContent],{type:"text/plain"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=o,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n),t.showToast(e.translate("LOG_EXPORTED","日志已导出: {filename}",{filename:o}))}catch(l){t.showToast(e.translate("LOG_EXPORT_ERROR","导出日志失败"),"error")}},escapeHtml:t=>t?t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"):"",virtualScroll:{defaultHeight:32,bufferSize:10,totalItems:[],scrollTop:0,lastScrollTime:0,scrollThrottle:50,isProcessing:!1,heightCache:new Map},handleScroll(t){if(this.virtualScroll.isProcessing)return;const e=Date.now();e-this.virtualScroll.lastScrollTime<this.virtualScroll.scrollThrottle||(this.virtualScroll.scrollTop=t.target.scrollTop,this.virtualScroll.lastScrollTime=e,this.virtualScroll.isProcessing=!0,requestAnimationFrame(()=>{this.updateVisibleItems(),this.virtualScroll.isProcessing=!1}))},updateVisibleItems(){const t=document.getElementById("logs-display-container");if(!t)return;const{bufferSize:e,totalItems:l,scrollTop:o}=this.virtualScroll,s=t.clientHeight;let n=this.binarySearchOffset(o),i=o+s,a=n;for(;a<l.length&&l[a].offset<i;)a++;n=Math.max(0,n-e),a=Math.min(l.length,a+e);const r=l.length>0?l[l.length-1].offset+l[l.length-1].height:0,c=document.createDocumentFragment(),g=document.createElement("div");g.style.height=`${r}px`,g.style.position="relative",l.slice(n,a).forEach((t,e)=>{const l=document.createElement("div");l.className=`log-line ${t.logClass||""}`,l.innerHTML=t.content,l.style.position="absolute",l.style.top=`${t.offset}px`,l.style.width="100%",l.style.willChange="transform",l.dataset.index=n+e,g.appendChild(l)}),c.appendChild(g);const h=document.getElementById("logs-display");h&&(h.innerHTML="",h.appendChild(c),this.updateRenderedHeights(n,a))},binarySearchOffset(t){const{totalItems:e}=this.virtualScroll;let l=0,o=e.length-1;for(;l<=o;){const s=Math.floor((l+o)/2),n=e[s].offset;if(n<=t&&(s===e.length-1||e[s+1].offset>t))return s;n>t?o=s-1:l=s+1}return 0},updateRenderedHeights(t,e){const{totalItems:l,heightCache:o}=this.virtualScroll,s=document.getElementById("logs-display");if(!s)return;const n=s.querySelectorAll(".log-line");let i=t>0?l[t-1].offset+l[t-1].height:0;n.forEach((e,s)=>{const n=t+s,a=e.getBoundingClientRect().height;a>0&&(o.set(l[n].id,a),l[n].height=a),l[n].offset=i,e.style.top=`${i}px`,i+=l[n].height});for(let a=e;a<l.length;a++)l[a].offset=i,i+=l[a].height},formatLogContent(){if(!this.logContent||""===this.logContent.trim())return`<div class="empty-state">${e.translate("NO_LOGS","没有可用的日志")}</div>`;const t=this.logContent.split("\n").filter(t=>t.trim());this.virtualScroll.totalItems=t.map((t,e)=>this.processLogLine(t,e));let l=0;this.virtualScroll.totalItems.forEach(t=>{t.offset=l,l+=t.height});const o=document.getElementById("logs-display-container");let s=0,n=o?o.clientHeight:500;for(;s<this.virtualScroll.totalItems.length&&this.virtualScroll.totalItems[s].offset<n;)s++;s=Math.min(this.virtualScroll.totalItems.length,s+2*this.virtualScroll.bufferSize);const i=this.virtualScroll.totalItems.length>0?this.virtualScroll.totalItems[this.virtualScroll.totalItems.length-1].offset+this.virtualScroll.totalItems[this.virtualScroll.totalItems.length-1].height:0,a=document.createDocumentFragment(),r=document.createElement("div");return r.style.height=`${i}px`,r.style.position="relative",this.virtualScroll.totalItems.slice(0,s).forEach((t,e)=>{const l=document.createElement("div");l.className=`log-line ${t.logClass||""}`,l.innerHTML=t.content,l.style.position="absolute",l.style.top=`${t.offset}px`,l.style.width="100%",l.style.willChange="transform",l.dataset.index=e,r.appendChild(l)}),a.appendChild(r),a.firstChild.outerHTML},processLogLine(t,e){if(!t.trim())return{id:e,content:"",logClass:"",height:this.virtualScroll.defaultHeight,offset:0};let l=this.escapeHtml(t),o="";const s=l.match(/\[(ERROR|WARN|INFO|DEBUG)\]/);s&&(o=s[1].toLowerCase(),l=l.replace(s[0],"").trim());const n=l.match(/\d{4}-\d{2}-\d{2}[T ]\d{2}:\d{2}:\d{2}/);if(n){const t=new Date(n[0]),e=this.getRelativeTimeString(t);l=l.replace(n[0],e).trim()}return{id:e,content:l,logClass:o,height:this.virtualScroll.heightCache.get(e)||this.virtualScroll.defaultHeight,offset:0}},getRelativeTimeString(t){const l=new Date,o=l-t,s=Math.floor(o/6e4),n=Math.floor(s/60),i=new Date(l.getFullYear(),l.getMonth(),l.getDate()),a=new Date(i);a.setDate(a.getDate()-1);const r=`${t.getHours()}:${String(t.getMinutes()).padStart(2,"0")}`;return s<1?e.translate("LOG_TIME_JUST_NOW","刚刚"):s<60?e.translate("LOG_TIME_MINUTES_AGO","{minutes}分钟前",{minutes:s}):n<24&&t>=i?e.translate("LOG_TIME_TODAY","今天 {time}",{time:r}):t>=a&&t<i?e.translate("LOG_TIME_YESTERDAY","昨天 {time}",{time:r}):t.getFullYear()===l.getFullYear()?e.translate("LOG_TIME_THIS_YEAR","{month}月{day}日 {time}",{month:t.getMonth()+1,day:t.getDate(),time:r}):e.translate("LOG_TIME_FULL_DATE","{year}/{month}/{day} {time}",{year:t.getFullYear(),month:t.getMonth()+1,day:t.getDate(),time:r})},render(){const t=Object.keys(this.logFiles).length>0;return`\n            <div class="logs-container">\n                <div class="controls-row">\n                    <label>\n                        <span>${e.translate("SELECT_LOG_FILE","选择日志文件")}</span>\n                        <select id="log-file-select" ${t?"":"disabled"}>\n                            ${this.renderLogFileOptions()}\n                        </select>\n                    </label>\n                </div>\n                <div id="logs-display-container" class="card-content logs-scroll-container">\n                    <div id="logs-display" class="logs-content">${this.formatLogContent()}</div>\n                </div>\n            </div>\n        `},renderLogFileOptions(){return 0===Object.keys(this.logFiles).length?`<option value="" disabled>${e.translate("NO_LOGS_FILES","没有可用的日志文件")}</option>`:Object.keys(this.logFiles).map(t=>`<option value="${t}" ${this.currentLogFile===t?"selected":""}>${t}</option>`).join("")},afterRender(){document.getElementById("log-file-select")?.addEventListener("change",t=>{this.currentLogFile=t.target.value,this.loadLogContent(!0)});const t=document.getElementById("logs-display-container");t&&(this.boundScrollHandler=this.handleScroll.bind(this),t.addEventListener("scroll",this.boundScrollHandler),this.updateRenderedHeights(0,this.virtualScroll.totalItems.length)),this.onLanguageChanged()},onLanguageChanged(t){this.registerActions();const l=document.querySelector(".logs-container label span");l&&(l.textContent=e.translate("SELECT_LOG_FILE","选择日志文件"));const o=document.querySelector(".empty-state");o&&(0===Object.keys(this.logFiles).length?o.textContent=e.translate("NO_LOGS_FILES","没有可用的日志文件"):this.logContent&&""!==this.logContent.trim()||(o.textContent=e.translate("NO_LOGS","没有可用的日志")))},onActivate(){this.registerActions()},onDeactivate(){this.boundLanguageHandler&&(document.removeEventListener("languageChanged",this.boundLanguageHandler),this.boundLanguageHandler=null);const t=document.getElementById("logs-display-container");t&&this.boundScrollHandler&&(t.removeEventListener("scroll",this.boundScrollHandler),this.boundScrollHandler=null),this.ui.clearPageActions("logs")}};export{l as LogsPage};
