import{C as t}from"./core-CSZe8cb_.js";import{I as e}from"./main-CQLp2XMv.js";const s={config:null,settings:{},settingsBackup:{},hasUnsavedChanges:!1,tempFormState:{},excludedSettings:[],settingsDescriptions:{},settingsOptions:{},isLoading:!1,isCancelled:!1,preloadedData:null,async preload(){try{const[t,e]=await Promise.all([this.loadSettingsData(),this.loadSettingsMetadata()]);if(this.isCancelled)return;t&&(this.settings=t),e?(this.settingsDescriptions=e.descriptions||{},this.settingsOptions=e.options||{},this.excludedSettings=e.excluded||[]):this.setupTestMetadata(),this.isPreloaded=!0}catch(t){this.setupTestMetadata()}},async init(t){this.ui=t;try{if(this.isCancelled=!1,this.registerActions(),this.boundLanguageHandler=this.onLanguageChanged.bind(this),document.addEventListener("languageChanged",this.boundLanguageHandler),this.tempFormState&&Object.keys(this.tempFormState).length>0&&this.hasUnsavedChanges){if(this.settingsDescriptions||await this.loadSettingsMetadata(),this.settings={...this.tempFormState},!this.settingsBackup||0===Object.keys(this.settingsBackup).length){const t=this.preloadedData?.settingsData||await this.loadSettingsData();if(t&&Object.keys(t).length>0){const e={};for(const s in t)s.startsWith("_")||(e[s]=t[s]);this.settingsBackup=JSON.parse(JSON.stringify(e))}}return!0}return this.hasUnsavedChanges=!1,this.preloadedData?(this.settings=this.preloadedData.settingsData||{},this.settingsDescriptions=this.preloadedData.settingsMetadata?.descriptions||{},this.settingsOptions=this.preloadedData.settingsMetadata?.options||{},this.excludedSettings=this.preloadedData.settingsMetadata?.excluded||[]):await Promise.all([this.loadSettingsData(),this.loadSettingsMetadata()]),this.createSettingsBackup(),!0}catch(e){return!1}},onLanguageChanged(){const t=document.getElementById("settings-container");t&&(this.saveTemporaryFormState(),t.innerHTML=this.renderSettings(),this.restoreFormState(),requestAnimationFrame(()=>this.bindSettingEvents())),requestAnimationFrame(()=>{this.registerActions()})},registerActions(){this.ui.registerPageActions("settings",[{id:"save-settings",icon:"save",title:e.translate("SAVE_SETTINGS","保存设置"),onClick:"saveSettings"},{id:"restore-settings",icon:"restore",title:e.translate("RESTORE_SETTINGS","还原设置"),onClick:"restoreSettings"}])},createSettingsBackup(){const t={};for(const e in this.settings)e.startsWith("_")||(t[e]=this.settings[e]);this.settingsBackup=JSON.parse(JSON.stringify(t))},render:()=>`\n            <div class="settings-content">\n                <div id="settings-container">\n                    <div class="loading-placeholder">\n                        ${e.translate("LOADING_SETTINGS","正在加载设置...")}\n                    </div>\n                </div>\n                <div id="settings-loading" class="loading-overlay">\n                    <div class="loading-spinner"></div>\n                </div>\n            </div>\n        `,isExcluded(t){return this.excludedSettings.some(e=>{if(e.includes("*")){return new RegExp("^"+e.replace(/\*/g,".*")+"$").test(t)}return e===t})},renderSettings(){this.settings&&0!==Object.keys(this.settings).filter(t=>!t.startsWith("_")).length||(this.settings=this.getTestSettings(),this.createSettingsBackup());return Object.keys(this.settings).filter(t=>!t.startsWith("_")&&!this.isExcluded(t)).sort().map(t=>{const e=this.settings[t],s=this.getSettingDescription(t);return`\n                <div class="setting-item" data-key="${t}">\n                    ${this.renderSettingControl(t,e,s)}\n                </div>\n            `}).join("")},getTestSettings:()=>({ENABLE_FEATURE_A:!0,ENABLE_FEATURE_B:!1,SERVER_PORT:8080,API_KEY:"test_api_key_12345",LOG_LEVEL:"info",THEME:"auto",VOLUME:75,BRIGHTNESS:80,APP_TEST_1:"should_be_excluded",APP_TEST_2:"should_be_excluded",SYSTEM_TEMP:"should_be_excluded",ACTION_TEST:"should_be_excluded"}),renderSettingControl(t,e,s){return this.settingsOptions[t]?this.renderSelectControl(t,e,s):"boolean"==typeof e?this.renderBooleanControl(t,e,s):"number"==typeof e?this.renderNumberControl(t,e,s):this.renderTextControl(t,e,s)},renderBooleanControl:(t,e,s)=>`\n            <div class="switches">\n                <label>\n                    ${s}\n                    <input type="checkbox" id="setting-${t}" ${e?"checked":""}>\n                </label>\n            </div>\n        `,renderNumberControl:(t,e,s)=>`\n            <label>\n                <span>${s}</span>\n                <input type="number" id="setting-${t}" value="${e}" class="md3-input">\n            </label>\n        `,renderTextControl(t,e,s){return`\n            <label>\n                <span>${s}</span>\n                <input type="text" id="setting-${t}" value="${"string"==typeof e?this.escapeHtml(e):e}">\n            </label>\n        `},escapeHtml:t=>t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"),renderSelectControl(t,s,n){const i=this.settingsOptions[t]?.options||[];if(0===i.length)return this.renderTextControl(t,s,n);return`\n            <label>\n                <span>${n}</span>\n                <select id="setting-${t}">\n                    ${i.map(t=>{const n=t.value,i=t.label&&(t.label[e.currentLang]||t.label.en)||n;return`<option value="${n}" ${n===s?"selected":""}>${i}</option>`}).join("")}\n                </select>\n            </label>\n        `},getSettingDescription(t){return this.settingsDescriptions[t]&&(this.settingsDescriptions[t][e.currentLang]||this.settingsDescriptions[t].en)||t},async loadSettingsData(){try{if(this.settings&&Object.keys(this.settings).filter(t=>!t.startsWith("_")).length>0)return this.settings;const e=`${t.MODULE_PATH}module_settings/config.sh`;if(this.isCancelled)return;const s=await Promise.race([t.execCommand(`cat "${e}"`),new Promise((t,e)=>setTimeout(()=>e(new Error("加载超时")),5e3))]);if(this.isCancelled)return;return s?(this.settings=this.parseConfigFile(s),this.settings):this.getTestSettings()}catch(s){return t.showToast(e.translate("SETTINGS_LOAD_ERROR","加载设置失败"),"error"),this.getTestSettings()}},parseConfigFile(t){const e={},s=t.split("\n");e._configInfo={lines:s,formats:{}};for(const n of s){if(""===n.trim())continue;const t=n.indexOf("#"),s=-1!==t?n.substring(0,t):n,i=-1!==t?n.substring(t):"",a=-1!==t?n.substring(0,t).match(/\s*$/)[0]:"";if(""===s.trim())continue;const o=s.match(/^([A-Za-z0-9_]+)\s*=\s*(.*)$/);if(o){const t=o[1];let s=o[2].trim();e._configInfo.formats[t]={comment:i,commentSpacing:a,hasDoubleQuotes:s.startsWith('"')&&s.endsWith('"'),hasSingleQuotes:s.startsWith("'")&&s.endsWith("'")},(e._configInfo.formats[t].hasDoubleQuotes||e._configInfo.formats[t].hasSingleQuotes)&&(s=s.substring(1,s.length-1));const n=s.toLowerCase();"true"===n||"false"===n?e[t]="true"===n:isNaN(s)||""===s.trim()||isNaN(parseFloat(s))?e[t]=s:e[t]=Number(s)}}return e},async loadSettingsMetadata(){try{const e=`${t.MODULE_PATH}module_settings/settings.json`;if(this.isCancelled)return null;const s=await t.execCommand(`cat "${e}"`);if(this.isCancelled)return null;if(!s)return this.getTestMetadata();const n=JSON.parse(s);return{excluded:n.excluded||[],descriptions:n.descriptions||{},options:n.options||{}}}catch(e){return this.getTestMetadata()}},getTestMetadata:()=>({descriptions:{ENABLE_FEATURE_A:{zh:"启用功能A",en:"Enable Feature A"},ENABLE_FEATURE_B:{zh:"启用功能B",en:"Enable Feature B"},SERVER_PORT:{zh:"服务器端口",en:"Server Port"},API_KEY:{zh:"API密钥",en:"API Key"},LOG_LEVEL:{zh:"日志级别",en:"Log Level"},THEME:{zh:"主题",en:"Theme"},VOLUME:{zh:"音量",en:"Volume"},BRIGHTNESS:{zh:"亮度",en:"Brightness"}},options:{LOG_LEVEL:{options:[{value:"debug",label:{zh:"调试",en:"Debug"}},{value:"info",label:{zh:"信息",en:"Info"}},{value:"warn",label:{zh:"警告",en:"Warning"}},{value:"error",label:{zh:"错误",en:"Error"}}]},THEME:{options:[{value:"auto",label:{zh:"自动",en:"Auto"}},{value:"light",label:{zh:"浅色",en:"Light"}},{value:"dark",label:{zh:"深色",en:"Dark"}}]}},excluded:["APP_*","SYSTEM_TEMP","ACTION_*"]}),setupTestMetadata(){const t=this.getTestMetadata();this.settingsDescriptions=t.descriptions,this.settingsOptions=t.options,this.excludedSettings=t.excluded},async saveSettings(){try{this.showLoading();const s={};for(const t in this.settings){if(t.startsWith("_")||this.isExcluded(t))continue;const e=document.getElementById(`setting-${t}`);e&&("checkbox"===e.type?s[t]=e.checked:"number"===e.type||"range"===e.type?s[t]=Number(e.value):s[t]=e.value)}const n=`${t.MODULE_PATH}module_settings/config.sh`;if(!this.settings._configInfo){const e=await t.execCommand(`cat "${n}"`);if(e){const t=this.parseConfigFile(e);this.settings._configInfo=t._configInfo}else this.settings._configInfo={lines:[],formats:{}}}let i="";if(this.settings._configInfo.lines)for(const t of this.settings._configInfo.lines){const e=t.match(/^([A-Za-z0-9_]+)\s*=/);e&&this.isExcluded(e[1])&&(i+=t+"\n")}for(const t in s){let e=s[t];const n=this.settings._configInfo.formats[t]||{};"string"==typeof e?this.settingsOptions[t]||n.hasDoubleQuotes?e=`"${e}"`:n.hasSingleQuotes?e=`'${e}'`:(e.includes(" ")||""===e)&&(e=`"${e}"`):"boolean"==typeof e&&(e=e?"true":"false"),i+=`${t}=${e}${n.comment?`${n.commentSpacing||" "}${n.comment}`:""}\n`}if(this.isCancelled)return;if(await t.execCommand(`echo '${i.replace(/'/g,"'\\''")}'> "${n}"`),this.isCancelled)return;const a=this.settings._configInfo;for(const t in this.settings)t.startsWith("_")||delete this.settings[t];for(const t in s)this.settings[t]=s[t];this.settings._configInfo=a,this.createSettingsBackup(),this.hasUnsavedChanges=!1,this.tempFormState={},t.showToast(e.translate("SETTINGS_SAVED","设置已保存"))}catch(s){this.isCancelled||t.showToast(e.translate("SETTINGS_SAVE_ERROR","保存设置失败"),"error")}finally{this.isCancelled||this.hideLoading()}},restoreSettings(){if(!this.settingsBackup||0===Object.keys(this.settingsBackup).length)return void t.showToast(e.translate("NO_SETTINGS_BACKUP","没有可用的设置备份"),"error");const s=this.settings._configInfo;this.settings=JSON.parse(JSON.stringify(this.settingsBackup)),s&&(this.settings._configInfo=s),this.updateSettingsDisplay(),this.hasUnsavedChanges=!1,this.tempFormState={},t.showToast(e.translate("SETTINGS_RESTORED","设置已还原"))},checkForUnsavedChanges(){if(!this.settings||!this.settingsBackup)return!1;const t={};for(const e in this.settings){if(e.startsWith("_")||this.isExcluded(e))continue;const s=document.getElementById(`setting-${e}`);s&&("checkbox"===s.type?t[e]=s.checked:"number"===s.type||"range"===s.type?t[e]=Number(s.value):t[e]=s.value)}for(const e in t){if(this.isExcluded(e))continue;const s=t[e],n=this.settingsBackup[e];if(typeof s!=typeof n)return!0;if("object"==typeof s){if(JSON.stringify(s)!==JSON.stringify(n))return!0}else if(s!==n)return!0}return!1},updateSettingsDisplay(){const t=document.getElementById("settings-container");t&&(t.innerHTML=this.renderSettings())},showLoading(){if(this.isLoading)return;this.isLoading=!0;const t=document.getElementById("settings-loading");t&&(t.style.display="flex",t.style.visibility="visible",t.style.opacity="1")},hideLoading(){if(!this.isLoading)return;this.isLoading=!1;const t=document.getElementById("settings-loading");t&&(t.style.opacity="0",t.style.visibility="hidden",setTimeout(()=>{this.isLoading||(t.style.display="none")},300))},saveTemporaryFormState(){const t={...this.settings};let e=!1;for(const s in this.settings){if(s.startsWith("_")||this.isExcluded(s))continue;const n=document.getElementById(`setting-${s}`);n&&(e=!0,"checkbox"===n.type?t[s]=n.checked:"number"===n.type||"range"===n.type?t[s]=Number(n.value):t[s]=n.value)}e&&(this.settings._configInfo&&(t._configInfo=this.settings._configInfo),this.tempFormState=t)},restoreFormState(){if(this.tempFormState&&0!==Object.keys(this.tempFormState).length)for(const t in this.tempFormState){if(t.startsWith("_")||this.isExcluded(t))continue;const e=document.getElementById(`setting-${t}`);if(!e)continue;const s=this.tempFormState[t];if("checkbox"===e.type)e.checked=Boolean(s);else if("number"===e.type||"range"===e.type){if(e.value=Number(s),"range"===e.type){const t=e.nextElementSibling;t&&"OUTPUT"===t.tagName&&(t.textContent=s)}}else e.value=String(s)}},async afterRender(){try{this.showLoading(),this.settings&&0!==Object.keys(this.settings).filter(t=>!t.startsWith("_")).length||await this.init(this.ui),this.updateSettingsDisplay(),this.restoreFormState(),this.bindSettingEvents()}catch(s){t.showToast(e.translate("SETTINGS_INIT_ERROR","设置页面初始化失败"),"error")}finally{this.hideLoading()}},bindSettingEvents(){const t=document.getElementById("settings-container");t&&(t.addEventListener("change",t=>{const e=t.target;"SELECT"!==e.tagName&&"INPUT"!==e.tagName||(this.hasUnsavedChanges=this.checkForUnsavedChanges(),this.saveTemporaryFormState())}),t.addEventListener("input",t=>{const e=t.target;if("range"===e.type){const t=e.nextElementSibling;t&&"OUTPUT"===t.tagName&&(t.textContent=e.value),this.hasUnsavedChanges=this.checkForUnsavedChanges(),this.saveTemporaryFormState()}}))},onActivate(){this.isCancelled=!1,this.registerActions()},onDeactivate(){this.hasUnsavedChanges||this.checkForUnsavedChanges()?(this.saveTemporaryFormState(),this.settingsBackup&&0!==Object.keys(this.settingsBackup).length||this.createSettingsBackup(),t.showToast(e.translate("UNSAVED_SETTINGS","设置有未保存的更改"),"warning")):(this.tempFormState={},this.hasUnsavedChanges=!1),this.boundLanguageHandler&&(document.removeEventListener("languageChanged",this.boundLanguageHandler),this.boundLanguageHandler=null),this.ui?.clearPageActions?.(),this.isCancelled=!0,this.cleanupResources()},cleanupResources(){const t=document.getElementById("settings-container");if(t){const e=t.cloneNode(!0);t.parentNode.replaceChild(e,t)}["restore-settings","refresh-settings","save-settings"].forEach(t=>{const e=document.getElementById(t);e&&e.replaceWith(e.cloneNode(!0))})}};export{s as SettingsPage};
